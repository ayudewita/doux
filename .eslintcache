[{"E:\\doux\\src\\components\\Home.js":"1","E:\\doux\\src\\components\\DataProvider.js":"2","E:\\doux\\src\\index.js":"3","E:\\doux\\src\\pages\\Login.js":"4","E:\\doux\\src\\pages\\Cart.js":"5","E:\\doux\\src\\components\\Navbar.js":"6","E:\\doux\\src\\serviceWorker.js":"7","E:\\doux\\src\\pages\\Details.js":"8","E:\\doux\\src\\App.js":"9"},{"size":20963,"mtime":1615362576006,"results":"10","hashOfConfig":"11"},{"size":13117,"mtime":1610680480731,"results":"12","hashOfConfig":"11"},{"size":513,"mtime":1610334935625,"results":"13","hashOfConfig":"11"},{"size":147,"mtime":1609961715541,"results":"14","hashOfConfig":"15"},{"size":6896,"mtime":1609966465181,"results":"16","hashOfConfig":"11"},{"size":4001,"mtime":1614819244054,"results":"17","hashOfConfig":"11"},{"size":5086,"mtime":499162500000,"results":"18","hashOfConfig":"11"},{"size":153,"mtime":1609965591827,"results":"19","hashOfConfig":"11"},{"size":1244,"mtime":1610006528164,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"xox33x",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"r3csfc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\doux\\src\\components\\Home.js",["41","42","43","44"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { DataContext } from \"./DataProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Star from \"../images/star-full.png\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Home() {\r\n  // Get products\r\n\r\n  const [data, setData] = useState([]);\r\n  const [perPage] = useState(3);\r\n  const [pageCount, setPageCount] = useState(0);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const indexOfLastProduct = currentPage * perPage;\r\n\r\n  const indexOfFirstProduct = indexOfLastProduct - perPage;\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(\r\n        'http://localhost:1337/products',\r\n      );\r\n      \r\n      const data = result.data;\r\n     \r\n      // const handleKeyDown = (event) => {\r\n      //   if(event.key === 'Enter'){\r\n      //     console.log('do validate')\r\n      //   }\r\n      // }\r\n      \r\n      // const postData = slice_data.map(product =>\r\n      //       <Link\r\n      //   to={`/products/${product.product_id}`}\r\n      //   className=\"pnl rounded-md px-4 mb-5 relative w-full sm:w-1/3\"\r\n      //   key={product.product_id}\r\n      // >  \r\n      //   <div\r\n      //     style={{ backgroundImage: `url(${\"http://localhost:1337\"}${product.image.url})` }}\r\n      //     className=\"pr-img w-full rounded-t-md z-0\"\r\n      //   >\r\n      //     <div className=\"ovr rounded-t-md z-10\">\r\n      //       <div className=\"btn font-bold text-white uppercase py-1 px-6 rounded text-xs transition ease-in-out duration-150\">\r\n      //         View More\r\n      //       </div>\r\n      //     </div>\r\n      //     <div className=\"pr-nm-ct bg-white z-20 \">\r\n      //       <p className=\"ft-lr pr-nm text-gray-900 text-md\">\r\n      //         {product.title}\r\n      //       </p>\r\n      //       <hr className=\"udl\" />\r\n      //     </div>\r\n      //   </div>\r\n      //   <div className=\"br-clr border-gray-400 text-center rounded-b-md w-full border\">\r\n      //     <p className=\"pr-ds text-xs text-gray-700\">{product.description}</p>\r\n      //     <div className=\"flex justify-center pt-2\">\r\n      //       <img src={Star} className=\"st-w\" alt=\"\" />\r\n      //       <img src={Star} className=\"st-w\" alt=\"\" />\r\n      //       <img src={Star} className=\"st-w\" alt=\"\" />\r\n      //       <img src={Star} className=\"st-w\" alt=\"\" />\r\n      //       <img src={Star} className=\"st-w\" alt=\"\" />\r\n      //     </div>\r\n      //     <p className=\"prc\">${product.price}</p>\r\n      //   </div>\r\n      // </Link>\r\n      //   )\r\n      setData(data)\r\n      \r\n    };\r\n \r\n    fetchData();\r\n  },[]);\r\n\r\n  \r\n\r\n\r\nconst [search, setSearch] = useState('')\r\n\r\n\r\nconst filterData = data.filter(data =>{\r\n  return data.title.toLowerCase().includes(search.toLowerCase())\r\n})\r\n\r\n\r\n// const slice_data = filterData.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n\r\n// setPageCount(Math.ceil(data.length / perPage))\r\n\r\n// const handlePageClick = (e) => {\r\n//   const selectedPage = e.selected;\r\n//   setCurrentPage(selectedPage + 1)\r\n// };\r\n\r\n\r\n\r\n  const value = useContext(DataContext);\r\n  const [products] = value.products;\r\n\r\n  // Make product.offer unique\r\n  const offers = products.map((product) => product.offer);\r\n\r\n  let distinctOffers = [...new Set(offers)];\r\n\r\n  // Add \"all\" to product's offer\r\n  distinctOffers = [\"all\", ...distinctOffers];\r\n\r\n  // Remove \"\" from array of distinctOffers\r\n  const a = \"\";\r\n  const availableOffers = distinctOffers.filter(\r\n    (distinctOffers) => distinctOffers !== a\r\n  );\r\n\r\n  // Get selected offer value\r\n\r\n  // const [selectOffer, setSelectOffer] = useState(\"all\");\r\n  // const handleChange = (event) => {\r\n  //   event.preventDefault();\r\n  //   setSelectOffer(event.target.value);\r\n  // };\r\n\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n\r\n  // Filter product according to product's offer\r\n\r\n  // let sortedProducts = [...products];\r\n  // if (selectOffer !== \"all\") {\r\n  //   sortedProducts = sortedProducts.filter(\r\n  //     (product) => product.offer === selectOffer\r\n  //   );\r\n  // }\r\n\r\n  // Make product.category unique\r\n  const categories = products.map((product) => product.category);\r\n  let uniqueCategories = [...new Set(categories)];\r\n\r\n  // Add \"all\" to array of categories\r\n  uniqueCategories = [\"all\", ...uniqueCategories];\r\n\r\n  // Get value and index of clicked category\r\n  // const [selectCategory, setSelectCategory] = useState(\"all\");\r\n  // const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n  // const handleClick = (e, index) => {\r\n  //   setSelectCategory(e.target.innerHTML);\r\n  //   setActiveCategory(index);\r\n  //   setCurrentPage(e.target.id);\r\n  // };\r\n\r\n  // const indexOfLastProduct = currentPage * perPage;\r\n\r\n  // const indexOfFirstProduct = indexOfLastProduct - perPage;\r\n\r\n  // let currentProduct = products.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n  const totalProducts = products.length;\r\n  // let firstProduct = indexOfFirstProduct + 1;\r\n  // let lastProduct = indexOfLastProduct - (perPage - currentProduct.length);\r\n\r\n  // const totalPages = Math.ceil(totalProducts / perPage);\r\n\r\n  // Prev page button\r\n\r\n  // function prevPage() {\r\n  //   if (currentPage > 1) {\r\n  //     setCurrentPage(currentPage - 1);\r\n  //   }\r\n  // }\r\n\r\n  // Next page button\r\n\r\n  // function nextPage() {\r\n  //   if (currentPage < totalPages) {\r\n  //     setCurrentPage(currentPage + 1);\r\n  //   }\r\n  // }\r\n\r\n  \r\n\r\n  // const handlePageClick = (e) => {\r\n  //   const selectedPage = e.selected;\r\n  //   setOffset(selectedPage + 1);\r\n  // };\r\n\r\n  \r\n\r\n  // Filter product according to product's category\r\n\r\n  // if (selectCategory !== \"all\") {\r\n  //   sortedProducts = sortedProducts.filter(\r\n  //     (product) => product.category === selectCategory\r\n  //   );\r\n  // }\r\n\r\n  // const renderProducts = currentProduct.map((products, index) => {\r\n  //   return (\r\n  //     <Link\r\n  //       to={`/products/${products._id}`}\r\n  //       className=\"pnl rounded-md px-4 mb-5 relative w-full sm:w-1/3\"\r\n  //       key={index}\r\n  //     >\r\n  //       <div\r\n  //         style={{ backgroundImage: `url(${products.images})` }}\r\n  //         className=\"pr-img w-full rounded-t-md z-0\"\r\n  //       >\r\n  //         <div className=\"ovr rounded-t-md z-10\">\r\n  //           <div className=\"btn font-bold text-white uppercase py-1 px-6 rounded text-xs transition ease-in-out duration-150\">\r\n  //             View More\r\n  //           </div>\r\n  //         </div>\r\n  //         <div className=\"pr-nm-ct bg-white z-20 \">\r\n  //           <p className=\"ft-lr pr-nm text-gray-900 text-md\">\r\n  //             {products.title}\r\n  //           </p>\r\n  //           <hr className=\"udl\" />\r\n  //         </div>\r\n  //       </div>\r\n  //       <div className=\"br-clr border-gray-400 text-center rounded-b-md w-full border\">\r\n  //         <p className=\"pr-ds text-xs text-gray-700\">{products.description}</p>\r\n  //         <div className=\"flex justify-center pt-2\">\r\n  //           <img src={Star} className=\"st-w\" alt=\"\" />\r\n  //           <img src={Star} className=\"st-w\" alt=\"\" />\r\n  //           <img src={Star} className=\"st-w\" alt=\"\" />\r\n  //           <img src={Star} className=\"st-w\" alt=\"\" />\r\n  //           <img src={Star} className=\"st-w\" alt=\"\" />\r\n  //         </div>\r\n  //         <p className=\"prc\">${products.price}</p>\r\n  //       </div>\r\n  //     </Link>\r\n  //   );\r\n  // });\r\n\r\n  // let pageNumbers = [];\r\n  // for (let i = 1; i <= totalPages ; i++) {\r\n  //   pageNumbers.push(i);\r\n  // }\r\n\r\n  // const [currentNumber, setCurrentNumber] = useState(1);\r\n  // const pageLimit = 3;\r\n\r\n  // Limit page number display\r\n  // const indexOfLastNumber = currentNumber * pageLimit;\r\n\r\n  // const indexOfFirstNumber = indexOfLastNumber - pageLimit;\r\n\r\n  // let pageRange = pageNumbers.slice(indexOfFirstNumber, indexOfLastNumber);\r\n\r\n  // const renderPageNumbers = pageRange.map((number) => {\r\n  //   return (\r\n  //     <div\r\n  //       className=\"-ml-px relative inline-flex items-center px-4 py-2  brd-br bg-white text-sm leading-5 font-medium focus:z-10 focus:outline-none transition ease-in-out duration-150\"\r\n  //       key={number}\r\n  //       id={number}\r\n  //       onClick={handleClick}\r\n  //     >\r\n  //       {number}\r\n  //     </div>\r\n  //   );\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-img\">\r\n        <div className=\"bg-overlay\">\r\n          {/* Home */}\r\n\r\n          <div className=\"home\">\r\n            <div className=\"home-wrapper\">\r\n              <div className=\"home-container\">\r\n                <p className=\"line\">Special Offer</p>\r\n                <h1 className=\"line2\">50% OFF</h1>\r\n                <p className=\"line3\">for second slice of cake</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Product List */}\r\n\r\n      <div className=\"w-full flex justify-center py-6\">\r\n        <div className=\"mx-auto w-full flex md:w-4/5\">\r\n          <div className=\"left w-full md:w-4/5\">\r\n            <div className=\"top flex w-full mx-auto mb-6 px-4 text-xs text-gray-700\">\r\n              <div className=\"hidden md:w-1/2 md:flex items-center\">\r\n                {/* Showing {firstProduct} - {lastProduct} of {totalProducts}{\" \"}\r\n                results */}\r\n              </div>\r\n              <div className=\"w-full md:w-1/2 flex justify-end\">\r\n                <div className=\"w-full md:w-3/4\">\r\n                  <div className=\"relative\">\r\n                    <select\r\n                      className=\"cursor-pointer block capitalize appearance-none w-full border border-gray-400 py-2 px-3 pr-8 rounded leading-tight focus:border-gray-400 focus:outline-none focus:bg-white\"\r\n                      id=\"grid-state\"\r\n                      // onChange={handleChange}\r\n                    >\r\n                      {availableOffers.map((offer) => (\r\n                        <option key={offer} value={offer}>\r\n                          {offer}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <div className=\"dw-ar pointer-events-none absolute inset-y-0 flex items-center px-2\">\r\n                      <svg\r\n                        className=\"fill-current h-4 w-4\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 20 20\"\r\n                      >\r\n                        <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"leading-loose flex flex-wrap flex-row w-full\">\r\n              {sortedProducts.map((sortedProduct) => (\r\n                <Link\r\n                  to={`/products/${sortedProduct._id}`}\r\n                  className=\"pnl rounded-md px-4 mb-5 relative w-full sm:w-1/3\"\r\n                  key={sortedProduct._id}\r\n                >\r\n                  <div\r\n                    style={{ backgroundImage: `url(${sortedProduct.images})` }}\r\n                    className=\"pr-img w-full rounded-t-md z-0\"\r\n                  >\r\n                    <div className=\"ovr rounded-t-md z-10\">\r\n                      <div className=\"btn font-bold text-white uppercase py-1 px-6 rounded text-xs transition ease-in-out duration-150\">\r\n                        View More\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pr-nm-ct bg-white z-20 \">\r\n                      <p className=\"ft-lr pr-nm text-gray-900 text-md\">\r\n                        {sortedProduct.title}\r\n                      </p>\r\n                      <hr className=\"udl\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"br-clr border-gray-400 text-center rounded-b-md w-full border\">\r\n                    <p className=\"pr-ds text-xs text-gray-700\">\r\n                      {sortedProduct.description}\r\n                    </p>\r\n                    <div className=\"flex justify-center pt-2\">\r\n                      <img src={Star} className=\"st-w\" alt=\"\" />\r\n                      <img src={Star} className=\"st-w\" alt=\"\" />\r\n                      <img src={Star} className=\"st-w\" alt=\"\" />\r\n                      <img src={Star} className=\"st-w\" alt=\"\" />\r\n                      <img src={Star} className=\"st-w\" alt=\"\" />\r\n                    </div>\r\n                    <p className=\"prc\">${sortedProduct.price}</p>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div> */}\r\n            <input type=\"text\" onChange={e => setSearch(e.target.value)}/>\r\n            <div className=\"leading-loose flex flex-wrap flex-row w-full\">   \r\n            {filterData.map(product =>\r\n        <Link\r\n        to={`/products/${product.product_id}`}\r\n        className=\"pnl rounded-md px-4 mb-5 relative w-full sm:w-1/3\"\r\n        key={product.product_id}\r\n      >  \r\n        <div\r\n          style={{ backgroundImage: `url(${\"http://localhost:1337\"}${product.image.url})` }}\r\n          className=\"pr-img w-full rounded-t-md z-0\"\r\n        >\r\n          <div className=\"ovr rounded-t-md z-10\">\r\n            <div className=\"btn font-bold text-white uppercase py-1 px-6 rounded text-xs transition ease-in-out duration-150\">\r\n              View More\r\n            </div>\r\n          </div>\r\n          <div className=\"pr-nm-ct bg-white z-20 \">\r\n            <p className=\"ft-lr pr-nm text-gray-900 text-md\">\r\n              {product.title}\r\n            </p>\r\n            <hr className=\"udl\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"br-clr border-gray-400 text-center rounded-b-md w-full border\">\r\n          <p className=\"pr-ds text-xs text-gray-700\">{product.description}</p>\r\n          <div className=\"flex justify-center pt-2\">\r\n            <img src={Star} className=\"st-w\" alt=\"\" />\r\n            <img src={Star} className=\"st-w\" alt=\"\" />\r\n            <img src={Star} className=\"st-w\" alt=\"\" />\r\n            <img src={Star} className=\"st-w\" alt=\"\" />\r\n            <img src={Star} className=\"st-w\" alt=\"\" />\r\n          </div>\r\n          <p className=\"prc\">${product.price}</p>\r\n        </div>\r\n      </Link>\r\n    \r\n        )}\r\n            </div>\r\n            <div className=\"page cursor-pointer\">\r\n              <div className=\"bg-white px-4 py-3 flex items-center justify-between sm:px-6\">\r\n                <ReactPaginate\r\n                  previousLabel={\"prev\"}\r\n                  nextLabel={\"next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={pageCount}\r\n                  marginPagesDisplayed={1}\r\n                  pageRangeDisplayed={4}\r\n                  // onPageChange={handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                />\r\n                {/* <div className=\"flex-1 flex justify-between sm:hidden\">\r\n                  <div\r\n                    onClick={prevPage}\r\n                    className=\"relative inline-flex items-center px-4 py-2 border brd-br text-sm leading-5 font-medium rounded-md bg-white focus:outline-none transition ease-in-out duration-150\"\r\n                  >\r\n                    Previous\r\n                  </div>\r\n                  <div\r\n                    onClick={nextPage}\r\n                    className=\"next ml-3 relative inline-flex items-center px-4 py-2 border brd-br text-sm leading-5 font-medium rounded-md bg-white focus:outline-none transition ease-in-out duration-150\"\r\n                  >\r\n                    Next\r\n                  </div>\r\n                </div>\r\n                <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-center\">\r\n                  <div>\r\n                    <nav className=\"relative z-0 inline-flex\">\r\n                      <div\r\n                        className=\"relative inline-flex items-center px-2 py-2 rounded-l-md brd-br bg-white text-sm leading-5 font-medium  focus:z-10 focus:outline-none transition ease-in-out duration-150\"\r\n                        aria-label=\"Previous\"\r\n                        onClick={prevPage}\r\n                      >\r\n                        <svg\r\n                          className=\"h-5 w-5\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 20 20\"\r\n                          fill=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                            clipRule=\"evenodd\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                      {renderPageNumbers}\r\n                      <div\r\n                        className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md brd-br bg-white text-sm leading-5 font-medium  focus:z-10 focus:outline-none transition ease-in-out duration-150\"\r\n                        aria-label=\"Next\"\r\n                        onClick={nextPage}\r\n                      >\r\n                        <svg\r\n                          className=\"h-5 w-5\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 20 20\"\r\n                          fill=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                            clipRule=\"evenodd\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    </nav>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right hidden md:w-1/5 md:block\">\r\n            <div className=\"categories px-4 pt-6 pb-2 rounded-md w-full border border-gray-400 mb-5\">\r\n              <p className=\"text-gray-900 text-lg mb-4 ft-lr\">Categories</p>\r\n              <React.Fragment>\r\n                {uniqueCategories.map((category, index) => (\r\n                  <p\r\n                    className={\r\n                      category === \"all\"\r\n                        ? \"text-gray-700 text-sm py-2 capitalize cursor-pointer\"\r\n                        : \"sub-cat text-gray-700 text-sm border-dotted border-gray-400 py-2 capitalize cursor-pointer\"\r\n                    }\r\n                    key={index}\r\n                    value={category}\r\n                    // onClick={(e) => {\r\n                    //   handleClick(e, index);\r\n                    // }}\r\n                    // style={{ color: activeCategory === index ? \"#b8a89b\" : \"\" }}\r\n                  >\r\n                    {category}\r\n                  </p>\r\n                ))}\r\n              </React.Fragment>\r\n            </div>\r\n\r\n            <div className=\"categories px-4 pt-6 pb-2 rounded-md w-full border border-gray-400\">\r\n              <div className=\"text-gray-900 text-lg mb-4 ft-lr\">\r\n                Filter by Price\r\n              </div>\r\n              <div className=\"w-full max-w-xs\">\r\n                <form>\r\n                  <div className=\"mb-4\">\r\n                    <label className=\"block text-gray-700 text-sm mb-2\">\r\n                      Minimum\r\n                    </label>\r\n                    <input\r\n                      className=\"text-xs appearance-none w-full border border-gray-400 py-2 px-3 rounded leading-tight focus:border-gray-400 focus:outline-none focus:bg-white\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-6\">\r\n                    <label className=\"block text-gray-700 text-sm mb-2\">\r\n                      Maximum\r\n                    </label>\r\n                    <input\r\n                      className=\"text-xs appearance-none w-full border border-gray-400 py-2 px-3 rounded leading-tight focus:border-gray-400 focus:outline-none focus:bg-white\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <button\r\n                      className=\"btn2 mb-2 hover:bg-white font-bold border text-white uppercase py-2 px-6 rounded text-xs transition ease-in-out duration-150 focus:outline-none\"\r\n                      type=\"button\"\r\n                    >\r\n                      Filter\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\doux\\src\\components\\DataProvider.js",[],"E:\\doux\\src\\index.js",[],"E:\\doux\\src\\pages\\Login.js",[],["45","46"],"E:\\doux\\src\\pages\\Cart.js",[],"E:\\doux\\src\\components\\Navbar.js",[],"E:\\doux\\src\\serviceWorker.js",[],"E:\\doux\\src\\pages\\Details.js",[],"E:\\doux\\src\\App.js",[],{"ruleId":"47","severity":1,"message":"48","line":14,"column":21,"nodeType":"49","messageId":"50","endLine":14,"endColumn":33},{"ruleId":"47","severity":1,"message":"51","line":15,"column":24,"nodeType":"49","messageId":"50","endLine":15,"endColumn":38},{"ruleId":"47","severity":1,"message":"52","line":19,"column":9,"nodeType":"49","messageId":"50","endLine":19,"endColumn":28},{"ruleId":"47","severity":1,"message":"53","line":162,"column":9,"nodeType":"49","messageId":"50","endLine":162,"endColumn":22},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},"no-unused-vars","'setPageCount' is assigned a value but never used.","Identifier","unusedVar","'setCurrentPage' is assigned a value but never used.","'indexOfFirstProduct' is assigned a value but never used.","'totalProducts' is assigned a value but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-global-assign","no-unsafe-negation"]